services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    image: ${REGISTRY:-ghcr.io}/${IMAGE_NAME:-your-username/your-repo}-frontend:${TAG:-latest}
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    image: ${REGISTRY:-ghcr.io}/${IMAGE_NAME:-your-username/your-repo}-backend:${TAG:-latest}
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      DATABASE_URL: ${DATABASE_URL:-sqlite:///./stories.db}
      ENVIRONMENT: ${ENVIRONMENT:-production}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
